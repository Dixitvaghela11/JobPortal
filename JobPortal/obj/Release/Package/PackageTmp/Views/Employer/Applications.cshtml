@model IEnumerable<JobPortal.Models.JobApplication>

@{
    ViewBag.Title = "Applications";
    Layout = "~/Views/Shared/EmployerLayout.cshtml";
}

<h2>Applications</h2>
<div class="d-flex align-items-center mb-3">
    <div class="form-group m-1 mb-0">
        <input type="text" id="searchInput" class="form-control" placeholder="Search by name">
    </div>
    <div class="form-group mb-0">
        <select id="statusFilter" class="form-control">
            <option value="">All Statuses</option>
            <option value="Read">Read</option>
            <option value="Approved">Approved</option>
            <option value="Rejected">Rejected</option>
            <option value="Pending">Pending</option>
        </select>
    </div>
</div>

<table class="table table-striped table-bordered">
    <thead class="thead-dark">
        <tr>
            <th scope="col">Application ID</th>
            <th scope="col">Job Seeker ID</th>
            <th scope="col">Applicant Name</th>
            <th scope="col">Date Applied</th>
            <th scope="col">Status</th>
            <th scope="col">Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.JobApplicationID)</td>
                <td>@Html.DisplayFor(modelItem => item.SeekerId)</td>
                <td>@Html.DisplayFor(modelItem => item.SeekerName)</td>
                <td>@Html.DisplayFor(modelItem => item.ApplicationDate)</td>
                <td>@Html.DisplayFor(modelItem => item.Status)</td>
                <td>
                    <div class="job-item" data-job-id="@item.JobApplicationID">
                        @Html.ActionLink("View Profile", "JobSeekerProfile", "Employer", new { id = item.SeekerId }, new { @class = "genric-btn primary circle" }) |
                        @Html.ActionLink("Approve \u2192", "ApplicationApprove", "Employer", new { id = item.JobApplicationID, aid = item.JobId }, new { @class = "genric-btn primary circle approve-btn", data_application_id = item.JobApplicationID, data_job_id = item.JobId }) |
                        @Html.ActionLink("Reject \u2192", "ApplicationReject", "Employer", new { id = item.JobApplicationID, aid = item.JobId }, new { @class = "genric-btn primary circle reject-btn", data_application_id = item.JobApplicationID, data_job_id = item.JobId })
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Custom Modal for Rejection -->
<div id="customModalReject" class="modal">
    <div class="modal-content">
        <span class="close">&times;</span>
        <h2>Reject Application</h2>
        <p>Are you sure you want to reject this application?</p>
        <textarea id="rejectionReason" placeholder="Enter reason for rejection" class="form-control mb-2"></textarea>
        <button id="confirmReject" class="btn-12"><span>Reject</span></button>
        <button id="cancelReject" class="btn-12"><span>Cancel</span></button>
    </div>
</div>

<!-- Custom Modal for Approval -->
<div id="customModalApprove" class="modal">
    <div class="modal-content">
        <span class="close">&times;</span>
        <h2>Approve Application</h2>
        <p>Enter the details to send to the applicant:</p>
        <input type="text" id="companyEmail" placeholder="Enter Company Email" class="form-control mb-2" />
        <input type="text" id="companyPhone" placeholder="Enter Phone Number" class="form-control mb-2" />
        <textarea id="approvalMessage" placeholder="Enter Message (optional)" class="form-control mb-2"></textarea>
        <button id="confirmApprove" class="btn-12"><span>Approve</span></button>
        <button id="cancelApprove" class="btn-12"><span>Cancel</span></button>
    </div>
</div>

<!-- Include jQuery library -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

<!-- Script for handling interactions -->
<script>
    $(document).ready(function () {
        // Function to send automatic messages
        function sendAutomaticMessage(seekerId, message) {
            var data = {
                id: seekerId,
                message: message
            };

            // AJAX request to send automatic message
            $.ajax({
                url: "/Employer/SendMessage", // Adjust the URL as per your route
                type: "POST",
                data: data,
                success: function (response) {
                    console.log("Automatic message sent successfully.");
                    showAlert('Automatic message sent successfully.');
                    window.location.reload(); // Refresh page after sending message
                },
                error: function (error) {
                    console.error("Error sending automatic message: " + error.statusText);
                }
            });
        }

        // Function to show alert box
        function showAlert(message) {
            var alertBox = $('<div class="alert-box">' + message + '</div>');
            $('body').append(alertBox);
            setTimeout(function () {
                alertBox.fadeOut('slow', function () {
                    $(this).remove();
                });
            }, 3000); // Remove alert after 3 seconds
        }

        // Modal elements for rejection
        var modalReject = document.getElementById("customModalReject");
        var spanReject = document.getElementsByClassName("close")[0];
        var confirmButtonReject = document.getElementById("confirmReject");
        var cancelButtonReject = document.getElementById("cancelReject");
        var rejectionReasonInput = document.getElementById("rejectionReason");

        // Modal elements for approval
        var modalApprove = document.getElementById("customModalApprove");
        var spanApprove = document.getElementsByClassName("close")[1];
        var confirmButtonApprove = document.getElementById("confirmApprove");
        var cancelButtonApprove = document.getElementById("cancelApprove");
        var companyEmailInput = document.getElementById("companyEmail");
        var companyPhoneInput = document.getElementById("companyPhone");
        var approvalMessageInput = document.getElementById("approvalMessage");

        // Event listener for Reject button click
        $(".reject-btn").click(function (e) {
            e.preventDefault();
            var applicationId = $(this).data("application-id");
            var seekerId = $(this).closest("tr").find("td:eq(1)").text(); // Fetching SeekerId
            var jobId = $(this).data("job-id");

            // Open the modal
            modalReject.style.display = "block";

            // Confirm button click handler for rejection
            confirmButtonReject.onclick = function () {
                var rejectionReason = rejectionReasonInput.value;

                if (rejectionReason) {
                    var url = "/Employer/ApplicationReject?id=" + applicationId + "&aid=" + jobId;

                    // AJAX request to reject the application
                    $.ajax({
                        url: url,
                        type: 'GET',
                        success: function (data) {
                            console.log('Application rejected successfully.');
                            showAlert('Application rejected successfully.');
                            // After rejection, send automatic message to the job seeker with the reason
                            sendAutomaticMessage(seekerId, "You are rejected. Reason: " + rejectionReason);
                        },
                        error: function (error) {
                            console.error("Error rejecting application: " + error.statusText);
                        }
                    });

                    // Close the modal
                    modalReject.style.display = "none";
                } else {
                    alert("Please enter a reason for rejection.");
                }
            };

            // Cancel button click handler for rejection
            cancelButtonReject.onclick = function () {
                // Close the modal
                modalReject.style.display = "none";
            };

            // Close the modal when the user clicks the close button (x)
            spanReject.onclick = function () {
                modalReject.style.display = "none";
            };

            // Close the modal when the user clicks anywhere outside of the modal
            window.onclick = function (event) {
                if (event.target == modalReject) {
                    modalReject.style.display = "none";
                }
            };
        });

        // Event listener for Approve button click
        $(".approve-btn").click(function (e) {
            e.preventDefault();
            var applicationId = $(this).data("application-id");
            var seekerId = $(this).closest("tr").find("td:eq(1)").text(); // Fetching SeekerId
            var jobId = $(this).data("job-id");

            // Open the modal
            modalApprove.style.display = "block";

            // Confirm button click handler for approval
            confirmButtonApprove.onclick = function () {
                var companyEmail = companyEmailInput.value;
                var companyPhone = companyPhoneInput.value;
                var approvalMessage = approvalMessageInput.value || "Congratulations! You are approved. Please contact us for further instructions.";

                // Validate inputs
                if (companyEmail && companyPhone) {
                    var message = "Company Email: " + companyEmail + "\nPhone Number: " + companyPhone + "\nMessage: " + approvalMessage;

                    var url = "/Employer/ApplicationApprove?id=" + applicationId + "&aid=" + jobId;

                    // AJAX request to approve the application
                    $.ajax({
                        url: url,
                        type: 'GET',
                        data: {
                            companyEmail: companyEmail,
                            companyPhone: companyPhone,
                            approvalMessage: approvalMessage
                        },
                        success: function (data) {
                            console.log('Application approved successfully.');
                            showAlert('Application approved successfully.');
                            // After approval, send automatic message to the job seeker with the details
                            sendAutomaticMessage(seekerId, message);
                        },
                        error: function (error) {
                            console.error("Error approving application: " + error.statusText);
                        }
                    });

                    // Close the modal
                    modalApprove.style.display = "none";
                } else {
                    alert("Please enter both company email and phone number.");
                }
            };

            // Cancel button click handler for approval
            cancelButtonApprove.onclick = function () {
                // Close the modal
                modalApprove.style.display = "none";
            };

            // Close the modal when the user clicks the close button (x)
            spanApprove.onclick = function () {
                modalApprove.style.display = "none";
            };

            // Close the modal when the user clicks anywhere outside of the modal
            window.onclick = function (event) {
                if (event.target == modalApprove) {
                    modalApprove.style.display = "none";
                }
            };
        });
    });
</script>

<!-- CSS for alert box animation -->
<style>
    /* Modal styles */
    .modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 1000; /* Sit on top */
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(0, 0, 0); /* Fallback color */
        background-color: rgba(0, 0, 0, 0.4); /* Black w/ opacity */
    }

    /* Modal Content */
    .modal-content {
        background-color: #fefefe;
        margin: 15% auto; /* 15% from the top and centered */
        padding: 20px;
        border: 1px solid #888;
        width: 80%; /* Could be more or less, depending on screen size */
        max-width: 500px;
        border-radius: 10px;
    }

    /* Close Button */
    .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }

    /* Modal Buttons */
    .btn-12,
    .btn-12 *,
    .btn-12 :after,
    .btn-12 :before,
    .btn-12:after,
    .btn-12:before {
        border: 0 solid;
        box-sizing: border-box;
    }

    .btn-12 {
        -webkit-tap-highlight-color: transparent;
        -webkit-appearance: button;
        background-color: #000;
        background-image: none;
        color: #fff;
        cursor: pointer;
        font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji;
        font-size: 100%;
        font-weight: 900;
        line-height: 1.5;
        margin: 0;
        -webkit-mask-image: -webkit-radial-gradient(#000, #fff);
        padding: 0;
        text-transform: uppercase;
    }

        .btn-12:disabled {
            cursor: default;
        }

        .btn-12:-moz-focusring {
            outline: auto;
        }

        .btn-12 svg {
            display: block;
            vertical-align: middle;
        }

        .btn-12 [hidden] {
            display: none;
        }

    .btn-12 {
        border-radius: 99rem;
        border-width: 2px;
        overflow: hidden;
        padding: 0.8rem 3rem;
        position: relative;
    }

        .btn-12 span {
            mix-blend-mode: difference;
        }

        .btn-12:after,
        .btn-12:before {
            background: linear-gradient( 90deg, #fff 25%, transparent 0, transparent 50%, #fff 0, #fff 75%, transparent 0 );
            content: "";
            inset: 0;
            position: absolute;
            transform: translateY(var(--progress, 100%));
            transition: transform 0.2s ease;
        }

        .btn-12:after {
            --progress: -100%;
            background: linear-gradient( 90deg, transparent 0, transparent 25%, #fff 0, #fff 50%, transparent 0, transparent 75%, #fff 0 );
            z-index: -1;
        }

        .btn-12:hover:after,
        .btn-12:hover:before {
            --progress: 0;
        }

    /* Alert box animation */
    @@keyframes alertFadeIn {
        from {
            opacity: 0;
            transform: translateY(-20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .alert-box {
        display: none;
        position: fixed;
        top: 20px;
        right: 20px;
        background-color: #4CAF50;
        color: white;
        padding: 15px;
        border-radius: 5px;
        animation: alertFadeIn 0.3s ease forwards;
    }
</style>
